"""added authentication columns

Revision ID: 859d6189af84
Revises: d814f3638f8e
Create Date: 2024-02-02 09:40:38.861781

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '859d6189af84'
down_revision = 'd814f3638f8e'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('artist_table', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('password_hash', sa.String(), nullable=True))
        batch_op.create_unique_constraint(batch_op.f('uq_artist_table_email'), ['email'])
        batch_op.create_unique_constraint(batch_op.f('uq_artist_table_username'), ['username'])

    with op.batch_alter_table('bids_table', schema=None) as batch_op:
        batch_op.alter_column('artist_id',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('request_id',
               existing_type=sa.INTEGER(),
               nullable=False)

    with op.batch_alter_table('business_table', schema=None) as batch_op:
        batch_op.add_column(sa.Column('username', sa.String(), nullable=True))
        batch_op.add_column(sa.Column('password_hash', sa.String(), nullable=True))
        batch_op.create_unique_constraint(batch_op.f('uq_business_table_email'), ['email'])
        batch_op.create_unique_constraint(batch_op.f('uq_business_table_username'), ['username'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('business_table', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_business_table_username'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_business_table_email'), type_='unique')
        batch_op.drop_column('password_hash')
        batch_op.drop_column('username')

    with op.batch_alter_table('bids_table', schema=None) as batch_op:
        batch_op.alter_column('request_id',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('artist_id',
               existing_type=sa.INTEGER(),
               nullable=True)

    with op.batch_alter_table('artist_table', schema=None) as batch_op:
        batch_op.drop_constraint(batch_op.f('uq_artist_table_username'), type_='unique')
        batch_op.drop_constraint(batch_op.f('uq_artist_table_email'), type_='unique')
        batch_op.drop_column('password_hash')
        batch_op.drop_column('username')

    # ### end Alembic commands ###
